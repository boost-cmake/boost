cmake_minimum_required(VERSION 3.5)
project(boost_graph)

find_package(BCM)
include(BCMDeploy)
include(BCMSetupVersion)

find_package(boost_disjoint_sets)
find_package(boost_iterator)
find_package(boost_property_tree)
find_package(boost_random)
find_package(boost_functional)
find_package(boost_tti)
find_package(boost_concept_check)
find_package(boost_serialization)
find_package(boost_array)
find_package(boost_any)
find_package(boost_utility)
find_package(boost_regex)
find_package(boost_static_assert)
find_package(boost_property_map)
find_package(boost_detail)
find_package(boost_unordered)
find_package(boost_type_traits)
find_package(boost_foreach)
find_package(boost_config)
find_package(boost_math)
find_package(boost_smart_ptr)
find_package(boost_function)
find_package(boost_core)
find_package(boost_move)
find_package(boost_tuple)
find_package(boost_mpl)
find_package(boost_conversion)
find_package(boost_assert)
find_package(boost_preprocessor)
find_package(boost_bimap)
find_package(boost_integer)
find_package(boost_optional)
find_package(boost_spirit)
find_package(boost_xpressive)
find_package(boost_algorithm)
find_package(boost_parameter)
find_package(boost_multi_index)
find_package(boost_range)
find_package(boost_typeof)
find_package(boost_bind)
find_package(boost_lexical_cast)
find_package(boost_throw_exception)

bcm_setup_version(VERSION 1.64.0)

add_library(boost_graph 
src/graphml.cpp
src/read_graphviz_new.cpp
)
set_property(TARGET boost_graph PROPERTY EXPORT_NAME graph)

target_link_libraries(boost_graph PUBLIC boost::disjoint_sets)
target_link_libraries(boost_graph PUBLIC boost::iterator)
target_link_libraries(boost_graph PUBLIC boost::property_tree)
target_link_libraries(boost_graph PUBLIC boost::random)
target_link_libraries(boost_graph PUBLIC boost::functional)
target_link_libraries(boost_graph PUBLIC boost::tti)
target_link_libraries(boost_graph PUBLIC boost::concept_check)
target_link_libraries(boost_graph PUBLIC boost::serialization)
target_link_libraries(boost_graph PUBLIC boost::array)
target_link_libraries(boost_graph PUBLIC boost::any)
target_link_libraries(boost_graph PUBLIC boost::utility)
target_link_libraries(boost_graph PUBLIC boost::regex)
target_link_libraries(boost_graph PUBLIC boost::static_assert)
target_link_libraries(boost_graph PUBLIC boost::property_map)
target_link_libraries(boost_graph PUBLIC boost::detail)
target_link_libraries(boost_graph PUBLIC boost::unordered)
target_link_libraries(boost_graph PUBLIC boost::type_traits)
target_link_libraries(boost_graph PUBLIC boost::foreach)
target_link_libraries(boost_graph PUBLIC boost::config)
target_link_libraries(boost_graph PUBLIC boost::math)
target_link_libraries(boost_graph PUBLIC boost::smart_ptr)
target_link_libraries(boost_graph PUBLIC boost::function)
target_link_libraries(boost_graph PUBLIC boost::core)
target_link_libraries(boost_graph PUBLIC boost::move)
target_link_libraries(boost_graph PUBLIC boost::tuple)
target_link_libraries(boost_graph PUBLIC boost::mpl)
target_link_libraries(boost_graph PUBLIC boost::conversion)
target_link_libraries(boost_graph PUBLIC boost::assert)
target_link_libraries(boost_graph PUBLIC boost::preprocessor)
target_link_libraries(boost_graph PUBLIC boost::bimap)
target_link_libraries(boost_graph PUBLIC boost::integer)
target_link_libraries(boost_graph PUBLIC boost::optional)
target_link_libraries(boost_graph PUBLIC boost::spirit)
target_link_libraries(boost_graph PUBLIC boost::xpressive)
target_link_libraries(boost_graph PUBLIC boost::algorithm)
target_link_libraries(boost_graph PUBLIC boost::parameter)
target_link_libraries(boost_graph PUBLIC boost::multi_index)
target_link_libraries(boost_graph PUBLIC boost::range)
target_link_libraries(boost_graph PUBLIC boost::typeof)
target_link_libraries(boost_graph PUBLIC boost::bind)
target_link_libraries(boost_graph PUBLIC boost::lexical_cast)
target_link_libraries(boost_graph PUBLIC boost::throw_exception)



target_include_directories(boost_graph PRIVATE include)

bcm_deploy(TARGETS boost_graph INCLUDE include NAMESPACE boost::)

bcm_add_test_subdirectory()
